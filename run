#!/bin/bash
# Thanks, mac OS -.-
function __exe_shim {
  if [ "$(uname)" == "Darwin" ]; then
    echo "mono "
  fi

  echo ""
}

PAKET="$(__exe_shim) ./.paket/paket.exe"
FAKE="packages/build/FAKE/tools/FAKE.exe"

EXAMPLES_PROJ="examples/Examples.fsproj"
TEST_PROJ="tests/Test.CryptoExchangeClient/Test.CryptoExchangeClient.fsproj"
SRC_PROJ="src/CryptoExchangeClient.fsproj"

function __run {

  # First arg
  given_command=$1
  # The rest of the args
  arguments=${@:2}

  # For Sub-command redirection
  sub_command=$2
  sub_arguments=${@:3}


  # For debugging
  # echo "cmd:  $given_command"
  # echo "args: $arguments"

  case $given_command in
    p)      echo ": $PAKET :" && ${PAKET} $arguments;;
    dn)     dotnet $arguments;;
    paket)  ${PAKET} $arguments;;
    fake)   ${FAKE} $arguments Fake.fsx;;

    examples:build) dotnet build -f ${EXAMPLES_PROJ};;
    examples:restore) dotnet restore -f ${EXAMPLES_PROJ};;
    examples) dotnet run -p ${EXAMPLES_PROJ};;

    test) (cd tests/Test.CryptoExchangeClient && dotnet test Test.CryptoExchangeClient.fsproj);;
    test:restore) ${PAKET} restore -p ${TEST_PROJ};;

    restore) ${PAKET} restore;;

    build)
      echo "Building..."
      dotnet build $arguments
    ;;

    clean:all)
      echo "Cleaning..."
      # Don't name any folders bin or obj
      rm -rf **/bin/ && \
      rm -rf **/obj
    ;;

    init)
      cd .paket \
      rm paket.exe paket.bootstrapper* \

      wget https://github.com/fsprojects/Paket/releases/download/5.156.0/paket.bootstrapper.exe \
      && chmod +x paket.bootstrapper.exe \
      && ${__exe_shim} ./paket.bootstrapper.exe \
      && chmod +x paket.exe
    ;;

    release)
      local version=$(sed -n 's:.*<Version>\(.*\)</Version>.*:\1:p' src/CryptoExchangeClient.fsproj)

      echo ""
      echo "Releasing v. $version"
      echo ""

      echo "Packing..."
      dotnet pack src/CryptoExchangeClient.fsproj --include-symbols --include-source && \
      echo "Pushing..." && \
      dotnet nuget push src/bin/Debug/CryptoExchangeClient.$version.nupkg \
        -k $NUGET_KEY \
        -s https://api.nuget.org/v3/index.json
    ;;

    release:clean)
      ( ./run clean:all ) && \
      ( ./run build ) && \
      ( ./run release )
    ;;

    *)
      echo "command not recognized: $@"
  esac
}

# Also allow non-sourced running
if [ $1 ]; then
  __run $*
fi
